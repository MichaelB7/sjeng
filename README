What is Sjeng ?
---------------

Sjeng is a chessprogram that plays many variants. 
In addition to that, it can also play normal chess
quite well and is fully compatible with the standard 
XBoard/WinBoard protocol.

Technically, Sjeng is a highly advanced alpha-beta searcher, 
using modern techniques like history and killer moves, 
transposition tables, internal interative deepening, LVA/MVV
move ordering, and search enhancements like selective
extensions, Dynamic Principal Variation Search, Adaptive
nullmove pruning, Extended Futility Pruning and Limited 
Razoring. Sjeng can use an opening book and learns from
the games it plays.

In it's suicide mode, Sjeng use proof-number searches
to quickly find forced wins. Sjeng plays at the same
level that the best humans are capable of.

On 14th of October 2000, Sjeng won it's first title
by becoming the World Computer Crazyhouse Chess Champion.


How do I get it to work ?
-------------------------

 Building it
 -----------

    GNU/Linux, FreeBSD, other Un*x variants:
    ----------------------------------------
 
    Building Sjeng should be as simple as:

    ./configure
    make
    (su to root if needed)
    make install
 
    If you want to squeeze the last bit of
    performance out of Sjeng, try this:

    ./configure
    gcc -O9 -mpentiumpro -funroll-loops -s -o sjeng blob2.c

    If you do not have an x86 machine, or an older version
    of gcc that doesn't recognize the '-mpentiumpro' flag,
    you can safely remove it.

    If you notice Sjeng is only reporting time in full second
    increments, edit config.h and change #define HAVE_FTIME
    into #undef HAVE_FTIME.

    Windows
    -------

    I have succesfully compiled older versions of Sjeng with
    Microsoft Visual C++. Newer versions should work too,
    although they are not as well tested. You need to find
    a Windows port of the GDBM library. There are several
    (free) ones available on the internet.

    You will have to create a config.h file which contains
    
    #define HAVE_SYS_TIMEB_H
    #define HAVE_FTIME
    #define VERSION "7.4"

    You may have to define _WIN32 also.

    Alternatively you can use the Cygnus utilities. I have
    never used them myself so I cannot help you there, but
    you will probably have little or no trouble compiling
    Sjeng with them.
 
 The opening books
 -----------------

 Copy the files zh.opn and normal.opn from the books directory
 to the directory from where you will be running Sjeng. 

 It is important that you keep starting Sjeng from the same 
 directory, because otherwise it will not be able to find its 
 opening books and it will not learn from the games it plays.

 NEW!

 From release 7.3 onwards Sjeng has an automatic bookbuilder
 which can use PGN databases to generate an opening book.

 To use it, just start Sjeng and enter 'book'. To generate
 a crazyhouse/bughouse book, first type 'variant crazyhouse',
 then type 'book'. Be sure to make the keycache large enough
 or the book-generation will be slow and you will end up with
 very large files.

 You must use a pure PGN database. PGN derivates like BPGN
 are not (yet) supported, nor is the psuedo-PGN that some 
 other programs output. 

 I recommend running your PGN database through the 'Extract' 
 program by David Barnes first. It has options to strip 
 variantions, comments and NAG's and to suppress duplicates
 which will significantly speed up the bookbuilding process,
 as well as getting rid of any psuedo-SAN.

 A PGN database of some high-quality crazyhouse games is
 available at 
 ftp://sjeng.sourceforge.net/pub/sjeng/zhgames.pgn

 The binary books (.bin files) are NOT exchangable between
 operating systems. You cannot mix a Windows-built book with 
 a Unix-running Sjeng.

 The new .bin files can be used alongside the old .opn files.
 Sjeng will first look for an opening in the .opn files, and
 if nothing is found, it will look in the .bin files. 

 If the PGN database you used to generate the new book is large
 enough (more than a thousand positions) it is probably better
 to just delete the old .opn files.

 Getting an interface
 --------------------

 You can start Sjeng now by typing 'sjeng', but you will probably
 find the text-based interface unpleasant.

 The recommended interface for playing standard chess with Sjeng 
 is WinBoard/XBoard, by Tim Mann.

 http://www.research.digital.com/SRC/personal/mann/xboard.html

 Unfortunately WinBoard/XBoard does not provide any option to
 play bughouse or crazyhouse, only standard chess. The Zippy
 interface (the part that connects to the chess servers) built 
 into WinBoard/XBoard *does* support bughouse and crazyhouse though.

 Zon Juan Jan wrote a Windows interface for crazyhouse-playing
 programs that can be used with Sjeng. Go to
 
 http://bughouse.net

 and look in the downloads section. The program is called 
 Zhouse Challenger. It works nicely and I can recommend
 it a lot!

 Vassili Sukharev told me he was extending his bughouse-database
 program to work with Sjeng. His homepage is at:

 http://www.cs.washington.edu/homes/vassili/ 

 (at the moment of this writing no support was available yet)
 
Tuning Sjeng
------------

In the file ttable.c, you can change TTSIZE from 250000
to a higher number. This will improve performance, as 
long as your system does not have to swap to disk because
of it.

You can do the same with ECACHESIZE in ecache.c. This 
is not so imporant as TTSIZE is.

If you use Sjeng to play suicide, also look at MAXSEARCH
in proof.c. You may have to increase this if your machine
is very fast.

Benchmarking
------------

As a little test of your computer's speed, you can start
Sjeng and give the 'speed' command. This will run a little
benchmark of the most commonly-used functions in Sjeng.
Note that TTSIZE and ECACHESIZE will (should) not affect
the benchmark numbers.

Running testsuites
------------------

Sjeng can automatically run testsuites by use of the 'test'
command. Input data is expected to be in EPD format with
either a 'best move' (bm) or 'avoid move' (am) tag. 
Some testsuites are included in the 'tests' directory of the
Sjeng distribution.

Getting more info
-----------------

For more info about Sjeng, you can visit the homepage

http://sjeng.sourceforge.net/

and the project homepage:

http://sourceforge.net/project/?group_id=4560

The project homepage allows you to browse the public
forums, access the mailinglists, submit bugs etc... 

Visiting it is recommended, especially if you are
interested in the development of Sjeng. If you are
in need of info about Sjeng's internal workings, 
send me a mail at

gcp@users.sourceforge.net

For general questions about the usage of Sjeng, subscribe
to the users mailinglist via the following link:

http://lists.sourceforge.net/mailman/listinfo/sjeng-users


Reporting bugs
--------------

You can either use the bug-tracker on the project
homepage (recommended), or send email to

sjeng-devel@lists.sourceforge.net

Please try to provide an accurate description of the 
problem and, if possible, how to reproduce it.


New versions
------------

New versions of Sjeng which contain bugfixes and new
features are released from time to time. If you want
to be notified of new releases, subscribe to the 
sjeng-announce mailinglist via the following page:

http://lists.sourceforge.net/mailman/listinfo/sjeng-announce


What is bughouse ?
------------------

Bughouse is a form of chess which is played with 2 teams, 
each consisting of 2 players. Each player plays his opponent
on a seperate board. If a piece is captured, the capturing 
player can pass it on to his partner, who can then drop the 
piece into his game and use it.

If you have never played bughouse before, you are really
missing out on something. Try it, you'll like it.

for a more complete description of the rules:

http://matador.unige.ch/nabla/Bug/rules.html


What is crazyhouse ?
--------------------

Crazyhouse is similar to bughouse, but is played
with only 2 players, on 1 board.


What is suicide ?
-----------------

Suicide is a form of chess where the goal is to
lose all your pieces. Your king acts like a normal
piece and can be captured. If you can capture,
you must. 


Where can I play this game ?
----------------------------

The most common place to play bughouse is the Free Internet
Chess Server (FICS). Most important chess servers also offer
it, like the Internet Chess Club. 

http://www.freechess.org
http://www.chessclub.com

Or even better, gather a few friends, 2 chessboards, 2 clocks,
some beer, and have fun beating each other ;)
